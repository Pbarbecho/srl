DataBase,Title,Abstract,Keywords,Authors,Year,DocumentType,PublicationTitle,DOI,Link,Publisher,Language,ISSN,ISBN
ACM,Django-CMS overview,"The use of framework to provide dynamic web pages has been, in recent decades, quite common in the corporate environment so that arise in the ""world of technology"" several open source projects that are intended to facilitate the management, increasingly efficient, of content. This paper describes Django-CMS overview regarding its history, architecture, installation process, functionality and identify certain companies that using it.",CMS. open source; Django-CMS; framework; pyhton,"Quitério, Jorge; Ribeiro, José",2014,Conference,Proceedings of the International Conference on Information Systems and Design of Communication,10.1145/2618168.2618201,http://doi.org/10.1145/2618168.2618201,Association for Computing Machinery,English,,978-1-4503-2713-8
ACM,Compositional Design of Multi-Robot Systems Control Software on ROS,"This paper presents a methodology that relies on Assume-Guarantee Contracts to decompose the problem of synthesizing control software for a multi-robot system. Initially, each contract describes either a component (e.g., a robot) or an aspect of the system. Then, the design problem is decomposed into different synthesis and verification sub-problems, allowing to tackle the complexity involved in the design process. The design problem is then recomposed by exploiting the rigorousness provided by contracts. This allows us to achieve system-level simulation capable to be used for validating the entire design. Once validated, the software synthesized during the process can be integrated into Robot Operating System (ROS) nodes and executed using state-of-the-practice packages and tools for modern robotic systems. We apply the methodology to generate a control strategy for an autonomous goods transportation system. Our results show a massive reduction of the time required to obtain automatically the control software implementing a multi-robot mission.",Contract-based design; robotic operating system,"Spellini, Stefano; Lora, Michele; Fummi, Franco; Chattopadhyay, Sudipta",2019,Journal,ACM Transactions on Embedded Computing Systems,10.1145/3358197,http://doi.org/10.1145/3358197,,English,1539-9087,
ACM,Mercury: a reflective middleware for automatic parallelization of Bags-of-Tasks,"Today, the development of Bag-of-Tasks, i.e. embarrassingly parallel, applications for execution on multiprocessors or clusters requires the use of APIs not designed for this kind of problem. For instance, MPI allows the parallel execution of tasks, but was developed for much complex parallel applications, with high data communication between tasks. The use of such APIs requires the programmers to learn them, and add complexity to the final parallel solution. Mercury provides a platform for the transformation of serial applications into parallel Bag-of-Tasks. Mercury reads a configuration file stating what methods and classes should be parallelized, loads the application, and in run-time transforms it so that the specified methods are executed concurrently. This transformation is performed without user intervention. Its modular design allows the integration of Mercury with different parallel environments. The initial experiments done show that the overhead is minimal, and that it is possible to take advantage of parallel processing environments (multiprocessors/multicores, clusters, ...) without the use of complex APIs.",adaptive middleware; automatic parallelization; Bag-of-Tasks,"Silva, João Nuno; Veiga, Luís; Ferreira, Paulo",2009,Conference,Proceedings of the 8th International Workshop on Adaptive and Reflective MIddleware,10.1145/1658185.1658186,http://doi.org/10.1145/1658185.1658186,Association for Computing Machinery,English,,978-1-60558-850-6
ACM,Towards context-oriented programming in wireless sensor networks,"We present our ongoing work towards applying the context-oriented programming (COP) paradigm to wireless sensor networks (WSNs). Context---as a representation of the environment where the system operates---plays a key role in WSN applications, which must often adapt their operation depending on environmental conditions. We argue that promoting a notion of context as a first-class citizen in WSN programming facilitates the design and implementation of context-dependent functionality. To this end, we conceive a context-oriented programming model expressly tailored to WSNs, coupled with dedicated language constructs. Unlike the existing literature on COP, we embed the latter within low-level C-like languages that do not rely on resource-intensive features such as dynamic memory management. To make our design concrete, we describe a context-oriented extension of nesC---a widely used WSN programming language---and report on a preliminary assessment of our design.",context aware computing; sensor networks,"Afanasov, Mikhail; Mottola, Luca; Ghezzi, Carlo",2013,Conference,Proceedings of the 2013 ACM conference on Pervasive and ubiquitous computing adjunct publication,10.1145/2494091.2494141,http://doi.org/10.1145/2494091.2494141,Association for Computing Machinery,English,,978-1-4503-2215-7
ACM,Automated Machine Learning with Genetic Programming on Real Dataset of Tax Avoidance Classification Problem,"Dealing with real application datasets often derive a stumbling block for machine learning algorithms to produce good results in solving either prediction or classification problems. Imbalance dataset is the major reason for this problem associated with missing values, small dimension of data size and very skewed data distribution. This paper demonstrates an empirical study that used Automated Machine Learning (AML) based on Genetic Programming (GP) named as AML TPOT. This is a very recent AML developed as an open source Python library and reported as a promising model by a few of researchers who have tested the algorithm. Nevertheless, most of the works on the AML TPOT were conducted on a set of common or benchmark datasets for machine learning testing. In this paper, the focus is on real and deviant dataset, which were collected according to the tax avoidance of the Government-Link Company in Malaysia. Comparison of the AML performances that tested on the dataset with different GP parameters setting is provided. Thus, this paper provides a fundamental knowledge on the experimental design and finding that will be useful for the AML based GP future improvement.",Classification; Genetic Programming; Machine Learning; Tax Avoidance,"Masrom, Suraya; Rahman, Rahayu Abdul; Baharun, Norhayati; Rahman, Abdullah Sani Abd",2020,Conference,Proceedings of the 2020 9th International Conference on Educational and Information Technology,10.1145/3383923.3383942,http://doi.org/10.1145/3383923.3383942,Association for Computing Machinery,English,,978-1-4503-7508-5
ACM,"FLOP, a free laboratory of programming","The Test Driven Design (TDD) methodology [4, 23, 8] is currently a very common approach for programming and software engineering learning. On-line judges are widely used in everyday teaching, and their use in the scope of programming contests is currently especially well known. There are good tools and collections of programming problems available for exams as well as for contests. We have developed a simple, light, and practical open laboratory. The term open is used here in two senses: It is free for students to use and free to download and distribute under the GPL license. This laboratory hosts programming problems, it allows the instructor to easily add new ones, and it also automatically assesses the solutions sent by the students. In addition to the system, we have developed a collection of programming problems for CS1/2, designed from a pedagogical point of view and covering several levels of difficulty.",automatic grading; online judge; programming learning; programming teaching; web system,"Llana, Luis; Martin-Martin, Enrique; Pareja-Flores, Cristóbal",2012,Conference,Proceedings of the 12th Koli Calling International Conference on Computing Education Research,10.1145/2401796.2401807,http://doi.org/10.1145/2401796.2401807,Association for Computing Machinery,English,,978-1-4503-1795-5
ACM,Mobile vs. Desktop Programming Projects: The Effect on Students,"Programming projects are a common component of computer science curricula. In this paper we investigate how the decision of using a mobile and touch versus a desktop platform affected students. We ran two sets of programming projects, one developing desktop applications, the other developing mobile apps. Several months after the conclusion of the projects, we interviewed the students about their experiences. We found that our initial expectations regarding an increased student motivation were not completely met. We discuss the specific issues we uncovered, and the lessons we learned.",computer science education; programming for mobile; qualitative study,"Azadmanesh, Mohammad Reza; Sherwany, Amanj; Eynard, Davide; Vitasek, Matej; Hauswirth, Matthias",2014,Conference,Proceedings of the 2nd Workshop on Programming for Mobile & Touch,10.1145/2688471.2688479,http://doi.org/10.1145/2688471.2688479,Association for Computing Machinery,English,,978-1-4503-2295-9
ACM,ExaShark: a scalable hybrid array kit for exascale simulation,"Many problems in high-performance computing, such as stencil applications in iterative solvers or in particle-based simulations, have a need for regular distributed grids. Libraries offering such n-dimensional regular grids need to take advantage of the latest high-performance computing technologies and scale to exascale systems, but also need to be usable by non HPC experts. This paper presents ExaShark: a library for handling n-dimensional distributed data structures that strikes a balance between performance and usability. ExaShark is an open source middleware, offered as a library, targeted at reducing the increasing programming burden on heterogeneous current and future exascale architectures. It offers its users a global-array-like usability while its runtime can be configured to use shared memory threading techniques (Pthreads, OpenMP, TBB), inter-node distribution techniques (MPI, GPI), or combinations of both. ExaShark has been used to develop applications such as a Jacobian 2D heat simulation and advanced pipelined conjugate gradient solvers. These applications are used to demonstrate the performance and usability of ExaShark.",exascale simulation; middleware library; N-dimensional grids; numerical solvers; partitioned global address space,"Chakroun, Imen; Vander Aa, Tom; De Fraine, Bruno; Haber, Tom; Wuyts, Roel; Demeuter, Wolfgang",2015,Conference,Proceedings of the Symposium on High Performance Computing,,,Society for Computer Simulation International,English,,978-1-5108-0101-1
ACM,Eye-tracking Data Analyser (EDA): Web Application and Evaluation,"Eye tracking is a growing field of research that is widely used to understand user behaviours and cognitive strategies. Eye-trackers typically collect an enormous amount of data that needs to be analysed, processed and interpreted to draw some conclusions. Collected data is typically examined with either commonly used statistical tools such as SPSS which are not designed specifically for eye-tracking data analysis, or bespoke tools provided by eye-tracker vendors. However, these tools may require extensive experience or they may be extremely expensive. To address these limitations, we propose an open-source web application called EDA (Eye-Tracking Data Analyser) which can be used to analyse eye-tracking data, in particular, to conduct comparative statistical tests between two groups. In this paper, we first present the overall architecture and implementation of this application and then present its evaluation conducted with ten people who are experts in eye-tracking research. The evaluation shows that the EDA application is easy to use, and its workload measure is low in terms of NASA NLX.",eye tracking; mann-whitney; statistical comparison; t-test; two user groups,"Zakrt, Abdulrahman; Elmahgiubi, Abdulmalik Obaidah; Alhomsi, Beshir; Eraslan, Sukru; Yesilada, Yeliz",2020,Conference,ACM Symposium on Eye Tracking Research and Applications,10.1145/3379157.3391301,http://doi.org/10.1145/3379157.3391301,Association for Computing Machinery,English,,978-1-4503-7135-3
ACM,FlexAmata: A Universal and Efficient Adaption of Applications to Spatial Automata Processing Accelerators,"Pattern matching, especially for complex patterns with many variations, is an important task in many big-data applications and maps well to finite automata. Recently, a variety of research has focused on hardware acceleration of automata processing, especially via spatial architectures that directly map the patterns to massively parallel hardware elements, such as in FPGAs and in-memory solutions. We observed that all existing automata-acceleration architectures are designed based on fixed, 8-bit symbol processing, derived from ASCII processing. However, the alphabet size in pattern-matching applications varies from just a few up to billions of unique symbols. This makes it difficult to provide a universal and efficient mapping of this wide variety of automata applications to existing automata accelerators. In this paper, we present FlexAmata, a compiler solution for efficient adaption of applications with any alphabet size to existing pattern-matching accelerators. We demonstrate that this can increase automata processing efficiency in two ways. First, this improves resource utilization for applications with small alphabets and enables hardware acceleration for applications with very large alphabets (which otherwise would not map to hardware accelerators). Second, this enables the exploration of optimized bitwidth processing for future spatial hardware accelerators. We leverage FlexAmata and investigate the hardware implications of different bitwidth processing rates on the two state-of-the-art spatial accelerators, Cache Automaton (CA) and FPGAs. Our exploration across a wide range of automata benchmarks reveals that 4-bit processing rate on CA and 16-bit processing rate on FPGAs results in higher performance than the default 8-bit processing rate in these existing approaches.",automata processing; compiler; fpgas; memory-centric accelerators; reconfigurable computing,"Sadredini, Elaheh; Rahimi, Reza; Lenjani, Marzieh; Stan, Mircea; Skadron, Kevin",2020,Conference,Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems,10.1145/3373376.3378459,http://doi.org/10.1145/3373376.3378459,Association for Computing Machinery,English,,978-1-4503-7102-5
ACM,Applying statistical methodology to optimize and simplify software metric models with missing data,"During the construction of a software metric model, the decision on whether a particular predictor metric should be included is most likely based on an intuitive or experience based assumption that the predictor metric has an impact on the target metric with a statistical significance. However, a model constructed based on such an assumption may contain redundant predictor metric(s) and/or unnecessary predictor metric complexity. This is because the assumption made before the model construction is not verified after the model is constructed. To resolve the first problem (i.e., possible redundant predictor metric(s)), we propose a statistical hypothesis testing methodology to verify ""retrospectively"" the statistical significance of the impact of each predictor metric on the target metric. If the variation of a predictor metric does not correlate enough with the variation of the target metric, the predictor metric should be deleted from the model. For the second problem (i.e., unnecessary predictor metric complexity), we use ""goodness-of-fit"" to determine whether certain categories of a categorical predictor metric should be combined together. In addition, missing data often appear in the data sample used for constructing the model. We use a modified k-nearest neighbors (k-NN) imputation method to deal with this problem. A study using data from the ""Repository Data Disk - Release 6"" is reported. The results indicate that our methodology can be useful in trimming redundant predictor metrics and identifying unnecessary categories initially assumed for a categorical predictor metric in the model.",imputation method; missing data; model optimization; model simplification; models; software metrics,"Wong, W. Eric; Zhao, Jin; Chan, Victor K. Y.",2006,Conference,Proceedings of the 2006 ACM symposium on Applied computing,10.1145/1141277.1141687,http://doi.org/10.1145/1141277.1141687,Association for Computing Machinery,English,,978-1-59593-108-5
ACM,A survey of software metrics,,,"Kafura, Dennis",1985,Conference,Proceedings of the 1985 ACM annual conference on The range of computing : mid-80's perspective: mid-80's perspective,10.1145/320435.320583,http://doi.org/10.1145/320435.320583,Association for Computing Machinery,English,,978-0-89791-170-2
ACM,Early phase cost models for agile software processes in the US DoD,"Background: Software effort estimates are necessary and critical at an early phase for decision makers to establish initial budgets, and in a government context to select the most competitive bidder for a contract. The challenge is that estimated software requirements is the only size information available at this stage, compounded with the newly increasing adoption of agile processes in the US DoD. Aims: The objectives are to improve cost estimation by investigating available sizing measures, and providing practical effort estimation models for agile software development projects during the contract bidding phase or earlier. Method: The analysis explores the effects of independent variables for product size, peak staff, and domain on effort. The empirical data for model calibration is from 20 industrial projects completed recently for the US DoD, among a larger dataset of recent projects using other lifecycle processes. Results: Statistical results showed that initial software requirements is a valid size metric for estimating agile software development effort. Prediction accuracy improves when peak staff and domain are added as inputs to the cost models. Conclusion: These models may be used for estimates of agile projects, and evaluating software development contract cost proposals with inputs available during the bidding phase or earlier.",agile software processes; domain; interfaces; peak staff; productivity; requirements volatility; software cost estimation; software effort; software requirements; software size,"Rosa, Wilson; Madachy, Raymond; Clark, Bradford; Boehm, Barry",2017,Conference,Proceedings of the 11th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement,10.1109/ESEM.2017.10,http://doi.org/10.1109/ESEM.2017.10,IEEE Press,English,,978-1-5090-4039-1
ACM,A unified theory of software metrics,"The science of software metrics is a broad one touching on software engineering, structured programming and the mathematical discipline of measure theory. The third emphasizes what space is measurable or not; the second, what characteristics are to be measured; and the first, the potential feedback effects of measurement. By a careful exploration of these three fields we shall here demonstrate that a significant advancement can be made in software metrics by adopting a unified “field” theory — viz., there is a fundamental common ground on which to define formal software metric models independent of programming languages, programming methodologies and programming environments. Consequently, a combination of effective structured programming theory and the mathematical postulates of measure theory is a necessary starting point for the validation of software metric models. Structured programming advocates tree-like designs; and the mathematics of the tree structure indicates that the language of structured programming is metrication. With this realization, we here propose some standardized metrics that can be easily applicable by both researchers and practitioners. Others may also be defined on the same space. The notion of “UNIFIED” here means there exists a mathematical space on which to formally define different software metrics as well as validate metrics of software measurements.",classification of software complexity; feedback effects; ground space; measure theory; size; software characteristics; structural complexity; tree structure; validation; well-structured,"Ejiogu, Lem O.",1988,Conference,Proceedings of the 1988 ACM sixteenth annual conference on Computer science,10.1145/322609.322646,http://doi.org/10.1145/322609.322646,Association for Computing Machinery,English,,978-0-89791-260-0
ACM,Model-based functional size measurement,"Function Point Analysis (FPA) is the most widely used method for measuring the size of software requirements, usually for the purpose of cost estimation. Unfortunately, FPA is affected by several drawbacks: it must be performed by specifically skilled personnel, it is expensive, and the resulting measures are subject to high variability. In order to solve - at least partially - these problems, researchers have proposed to base FP counting on UML models. However, models built without having FPA in mind hardly provide the required information at the proper detail level, so that the measures of the models tend to vary accordingly. On the contrary, building models that are suitable for FPA generally requires additional notations, skills and effort, thus partly spoiling the advantages of the approach. This paper illustrates a technique for building FPA-oriented UML models that do not need to include more information than usually required by the development process, and are easy to measure. As a result, FPA can be performed in a seamless way, while yielding reliable results. The proposed technique was validated by means of a controlled experiment and a set of pilot applications, which are also briefly described in the paper.",function point analysis; functional size measurement; requirements modeling; uml,"Lavazza, Luigi A.; del Bianco, Vieri; Garavaglia, Carla",2008,Conference,Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement,10.1145/1414004.1414021,http://doi.org/10.1145/1414004.1414021,Association for Computing Machinery,English,,978-1-59593-971-5
ACM,"Impact of process improvement on software development predictions, for measuring software development project's performance benefits","This Paper describes PhD software engineering work on ""Impact of Process Improvement on Software Development Predictions, for Measuring Software Development Project's Performance Benefits"". This research is being conducted in order to develop a model that could predict impact of CMMI Process Improvement on Performance Classes- Productivity Parameters such as (Effort, Cost, Schedule and Productivity) and to give mechanism/framework for generating reports on the perceived performance benefits of Software Performance classes. To assist software managers in performing cost benefits analysis for CMMI initiatives.",CMMI; COCOMO; prediction; process improvement benefits,"Hani, Syeda Umema",2009,Conference,Proceedings of the 7th International Conference on Frontiers of Information Technology,10.1145/1838002.1838064,http://doi.org/10.1145/1838002.1838064,Association for Computing Machinery,English,,978-1-60558-642-7
ACM,Significance of Ticket Analytics in Effective Software Maintenance: Awareness,"Software even though intangible should undergo evolution to fit into the ever changing real world scenarios. In this context software maintenance is an inevitable activity; further optimizing the activities related to maintenance is not possible due to the lacuna in various aspects of the pre-production phases. Since 1969, the issues raised by Lehman related to software maintenance remain the same. Each issue faced by the maintenance team directly reflects in the quality of the software product. According to the related work, very few research is going on in the field of software maintenance and still scarce when it comes to research on incident and associated ticket; a part of corrective maintenance. In depth research on incident tickets should be viewed as critical since, it provides information related to the kind of maintenance activities that is performed in any timestamp. Therefore classifying and analyzing tickets becomes a critical task in managing the operations of the service since each incident will be having a service level agreement associated with it. Further, incident analysis is essential to identify the patterns associated. Due to the existence of huge population of software in each organization and millions of incidents get reported per software product every year, it is practically impossible to manually analyze all the tickets. This paper focuses on projecting the importance of ticket analytics to maintain the quality of software products and also identifying the incidents and related tickets based on various factors which are supported by a case study from the data collected from various organizations.",Incident; Incident Classification; Software Maintenance; Software Quality; Ticket Analytics,"Christa, Sharon; Suma, V.",2016,Conference,Proceedings of the ACM Symposium on Women in Research 2016,10.1145/2909067.2909091,http://doi.org/10.1145/2909067.2909091,Association for Computing Machinery,English,,978-1-4503-4278-0
ACM,OPUS #16G software structure: its characteristic polynomials,,,"Ejiogu, Lem O.",1984,Journal,ACM SIGPLAN Notices,10.1145/948363.948365,http://doi.org/10.1145/948363.948365,,English,0362-1340,
ACM,TM: a systematic methodology of software metrics,,,"Ejiogu, Lem O.",1991,Journal,ACM SIGPLAN Notices,10.1145/122203.122213,http://doi.org/10.1145/122203.122213,,English,0362-1340,
ACM,Measurement Metric Proposed For Big Data Analytics System,"Big data is defined as a very large data set (volume), velocity and variety. Big data analytics systems must be supports for parallel processing and large storage. The problem of this research is how to identify measurement metric based on big data analytics system characteristic. One device that support big data platform is Hadoop. Measurement is a process for assigning values or symbols to the attributes of an entity. The purpose of measurement is to distinguish between entities one to another. Indicator for software measurement represented with a metric. The aim of this research is to proposes some measurement metric for big data analytics system. This research using UML exactly a class diagram in system modelling to identify the measurement metric. Both of dynamic and static metric is proposed as solution to measure big data analytics system. Result for this researh are some measurement ndicator both of dynamic and static metric based on class diagram for big data analytics.",Big Data Analytics; Measurement; Metric; Software,"Samosir, Ridha Sefina; Hendric, Harco Leslie; Gaol, Ford Lumban; Abdurachman, Edi; Soewito, Benfano",2017,Conference,Proceedings of the 2017 International Conference on Computer Science and Artificial Intelligence,10.1145/3168390.3168425,http://doi.org/10.1145/3168390.3168425,Association for Computing Machinery,English,,978-1-4503-5392-2
ACM,The critical issues of software metrics part 0: perspectives on software measurements,,,"Ejiogu, L O",1987,Journal,ACM SIGPLAN Notices,10.1145/24697.24702,http://doi.org/10.1145/24697.24702,,English,0362-1340,
ACM,Software metrics: an introduction and annotated bibliography,"Software metrics, an area of software engineering, is concerned with various measurements of computer software and its development. Software metrics, its importance, some current areas of investigation, and problems are described. An annotated bibliography of work in software metrics is included.I often say that when you can measure what you are speaking about, and express it in numbers, you know something about it; but when you cannot measure it, when you cannot express it in numbers, your knowledge is of a meagre and unsatisfactory kind: it may be the beginning of knowledge, but you have scarcely, in you thoughts, advanced to the stage of science, whatever the matter may be.---Lord Kelvin, Popular Lectures and Addresses, volume 1, 1889",,"Cook, Michael L.",1982,Journal,ACM SIGSOFT Software Engineering Notes,10.1145/1005937.1005946,http://doi.org/10.1145/1005937.1005946,,English,0163-5948,
ACM,Using spreadsheet software to support metric's life cycle activities,"The application of the spreadsheet software in the field of software measurement technology is disccussed. A model of metric's life cycle is defined and used together with the spreadsheet software to develop a new class of complexity metrics, called Hybrid metrics. Theirs evaluation has shown that they are supperior to most other complexity metrics in estimating development times and allocating testing resources. Finally, the spreadsheet and conventional programming are compared, and it is not unreasonable to state that spreadsheet better supports activities performd during metric's life cycle then conventional programming.",,"Kokol, P.",1989,Journal,ACM SIGPLAN Notices,10.1145/66068.66069,http://doi.org/10.1145/66068.66069,,English,0362-1340,
ACM,Investigation of domain effects on software,"It has been stated that there is very less variability in cohesion, coupling and complexity of software packages within specific domains such as Graphical User Interface (GUI). This implies that software metrics show low variability within single domain and high variability between domains. This paper investigates the domain issue by creating hierarchical model of four different domains and two software packages within each domain. Metrics are collected on each package and compared against the domains and packages. Results confirm metrics are not domain centric.",cohesion; complexity; coupling; domain effects; software metrics; software quality,"Virani, Shamsnaz; Etzkorn, Letha; Gholston, Sampson; Farrington, Phillip; Utley, Dawn; Fortune, Julie",2009,Conference,Proceedings of the 47th Annual Southeast Regional Conference,10.1145/1566445.1566496,http://doi.org/10.1145/1566445.1566496,Association for Computing Machinery,English,,978-1-60558-421-8
ACM,SENESCOPE: A design tool for cost optimization of wireless sensor nodes,"The market of wireless sensor networks is permanently growing due to the declining costs of sensor nodes. This paper presents a new approach for the hardware design of sensor networks based on a multi-criteria cost optimization by means of evolutionary algorithms. During an automated selection procedure of several implementation variants, not only expenditures for development and fabrication are considered, but also additional objectives like time to market or process complexity. A design tool was realized in order to support the development of very cost-efficient sensor networks. The integration of specific cost models allows the designer to identify the appropriate architecture variants and technology options. The verification of the design tool resulted in valuable knowledge about sensor nodes especially for specific application scenarios. A prototype for condition monitoring was designed and discussed regarding options for cost optimization.",,"Niedermayer, M.; Richter, C.; Hefer, J.; Guttowski, S.; Reichl, H.",2009,Conference,Proceedings of the 2009 International Conference on Information Processing in Sensor Networks,,,IEEE Computer Society,English,,978-1-4244-5108-1
ACM,Surfing the net for software engineering notes,,,"Doernhoefer, Mark",2009,Journal,ACM SIGSOFT Software Engineering Notes,10.1145/1640162.1655275,http://doi.org/10.1145/1640162.1655275,,English,0163-5948,
ACM,Surfing the Net for Software Engineering Notes,,,"Doernhoefer, Mark",2015,Journal,ACM SIGSOFT Software Engineering Notes,10.1145/2693208.2693213,http://doi.org/10.1145/2693208.2693213,,English,0163-5948,
ACM,Towards a metrics suite for object oriented design,,,"Chidamber, Shyam R.; Kemerer, Chris F.",1991,Conference,"Conference proceedings on Object-oriented programming systems, languages, and applications",10.1145/117954.117970,http://doi.org/10.1145/117954.117970,Association for Computing Machinery,English,,978-0-201-55417-5
ACM,Software reusability assessment using soft computing techniques,"Software reuse, widely used now a days, is the development of software using some existing software components. In this paper we have proposed a model based on four parameters: Changeability, Interface Complexity, Understandability of Software and Documentation Quality for accessing software reusability levels using soft computing techniques viz. Fuzzy Logic, Neural Network and Neuro-Fuzzy. The proposed model using Neuro-Fuzzy technique is trained well and predicts satisfactory results with MARE 22% (21% for validation set 2) and MRE 0.007% (0.04 for validation set 2) when compared with other soft computing techniques.",and documentation quality; changeability; fuzzy logic; interface complexity; neural networks; neuro-fuzzy; software reusability; understandability of software,"Singh, Yogesh; Bhatia, Pradeep Kumar; Sangwan, Omprakash",2011,Journal,ACM SIGSOFT Software Engineering Notes,10.1145/1921532.1921548,http://doi.org/10.1145/1921532.1921548,,English,0163-5948,
ACM,"Integrating functional metrics, COCOMO II and earned value analysis for software projects using PMBoK","Nowadays, Function Point and Use Case Point metrics have been largely adopted in the software industry to measure the size of the development work of the project. Metrics should be used in conjunction with estimating techniques such as COCOMO. There has been an increasing interest in monitoring and controlling project performance. Earned Value Analysis present itself as an easy-to-understand technique that helps to monitor and control project's performance. This article presents a sequence of steps which allows the integration of software functional sizing metrics, COCOMO II and Earned Value Analysis in the processes recommended by the PMBoK for planning and controlling software development projects. The goal of such a sequence of steps is to help project managers to plan, monitor and control software development projects using the PMBoK and software functional metrics. The two metrics were chosen as the basic units due to their large acceptance by industry. COCOMO is a technique largely adopted in the software engineering area. A case study using an actual software project data was undertaken to evaluate our proposal. An add-in for Microsoft Project tool was developed to support that such a sequence of steps can be automated and integrated.",COCOMO II; earned value analysis; function points; PMBOK; use case points,"Garcia, Carlos Augusto Lombardi; Hirata, Celso Massaki",2008,Conference,Proceedings of the 2008 ACM symposium on Applied computing,10.1145/1363686.1363873,http://doi.org/10.1145/1363686.1363873,Association for Computing Machinery,English,,978-1-59593-753-7
ACM,Software metrics: roadmap,,Bayesian belief nets; casual models; multi-criteria decision aid; risk assessment; software metrics,"Fenton, Norman E.; Neil, Martin",2000,Conference,Proceedings of the Conference on The Future of Software Engineering,10.1145/336512.336588,http://doi.org/10.1145/336512.336588,Association for Computing Machinery,English,,978-1-58113-253-3
ACM,Front matter (letters and notices),,,"Tracz, Will",2003,Journal,ACM SIGSOFT Software Engineering Notes,10.1145/638750.639373,http://doi.org/10.1145/638750.639373,,English,0163-5948,
ACM,A class project to prepare software engineering students for their capstone projects,"We discuss the design of a class project which we have introduced to improve our Software Engineering course presented on the third-year graduate level at our institution. For this project, the whole class collaborate to design and implement a single, reasonably large software system. We believe that the class project has the potential to provide an intensive learning experience for our students and may have several educational benefits. We investigate the impact of the class project on student academic achievement and project success in terms of the quality of the code of the developed system. We gauge the impact of the class project by analysing differences the academic performance of the students in the course. Further, we analyzed the differences in assessment marks assigned to projects. We also evaluate the code quality by observing variations in selected software code metrics of the source code of the software systems delivered by the students. Although the results are inconclusive, we feel the class project provides a unique opportunity for students to get hands-on experience in the development of real-world software for industry.",capstone project class project; software engineering; software metrics; teaching software development,"Posthuma, Justus; Pieterse, Vreda; Baror, Stacey",2019,Conference,Proceedings of the 8th Computer Science Education Research Conference,10.1145/3375258.3375267,http://doi.org/10.1145/3375258.3375267,Association for Computing Machinery,English,,978-1-4503-7717-1
ACM,Software economics: a roadmap,,,"Boehm, Barry W.; Sullivan, Kevin J.",2000,Conference,Proceedings of the Conference on The Future of Software Engineering,10.1145/336512.336584,http://doi.org/10.1145/336512.336584,Association for Computing Machinery,English,,978-1-58113-253-3
